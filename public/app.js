// public/app.js - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–π –∫–æ–¥
let currentUser = null;
let authToken = null;

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    const loginForm = document.getElementById('loginForm');
    if (loginForm) {
        loginForm.addEventListener('submit', handleLogin);
        console.log('‚úÖ –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    checkAuthStatus();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞
async function handleLogin(e) {
    e.preventDefault();
    console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞...');
    
    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;

    try {
        const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ username, password })
        });

        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);

        if (data.success) {
            authToken = data.token;
            currentUser = data.user;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
            localStorage.setItem('authToken', authToken);
            localStorage.setItem('currentUser', JSON.stringify(currentUser));
            
            showMainApp();
            loadDashboard();
        } else {
            alert('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function checkAuthStatus() {
    const savedToken = localStorage.getItem('authToken');
    const savedUser = localStorage.getItem('currentUser');
    
    if (savedToken && savedUser) {
        authToken = savedToken;
        currentUser = JSON.parse(savedUser);
        showMainApp();
        loadDashboard();
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', currentUser);
    } else {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
function showMainApp() {
    console.log('üì± –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
    document.getElementById('loginPage').classList.add('hidden');
    document.getElementById('mainApp').classList.remove('hidden');
    document.getElementById('userInfo').textContent = 
        `${currentUser.name} (${currentUser.role})`;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    initNavigation();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function initNavigation() {
    console.log('üß≠ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é
    document.querySelectorAll('.list-group-item').forEach(item => {
        item.addEventListener('click', function(e) {
            e.preventDefault();
            const section = this.getAttribute('onclick')?.match(/showSection\('(\w+)'\)/)?.[1];
            if (section) {
                showSection(section);
            }
        });
    });

    // –°–∫—Ä—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª "–°—Ç—É–¥–µ–Ω—Ç—ã" –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    if (currentUser.role === 'student') {
        const studentsNavItem = document.querySelector('a[onclick*="students"]');
        if (studentsNavItem) {
            studentsNavItem.style.display = 'none';
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
    const logoutBtn = document.querySelector('button[onclick="logout()"]');
    if (logoutBtn) {
        logoutBtn.addEventListener('click', logout);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞
    const addStudentBtn = document.querySelector('button[onclick="showAddStudentForm()"]');
    if (addStudentBtn) {
        addStudentBtn.addEventListener('click', showAddStudentForm);
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏
function showSection(sectionName) {
    console.log('üìÇ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–∞–∑–¥–µ–ª:', sectionName);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã
    document.querySelectorAll('.section').forEach(section => {
        section.classList.add('hidden');
    });
    
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
    document.querySelectorAll('.list-group-item').forEach(item => {
        item.classList.remove('active');
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—É–Ω–∫—Ç—É
    document.querySelectorAll('.list-group-item').forEach(item => {
        if (item.getAttribute('onclick')?.includes(sectionName)) {
            item.classList.add('active');
        }
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª
    const targetSection = document.getElementById(sectionName + 'Section');
    if (targetSection) {
        targetSection.classList.remove('hidden');
    } else {
        console.error('‚ùå –†–∞–∑–¥–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', sectionName);
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞
    switch(sectionName) {
        case 'dashboard':
            loadDashboard();
            break;
        case 'students':
            loadStudents();
            break;
        case 'grades':
            loadGrades();
            break;
        case 'statistics':
            loadStatistics();
            break;
        default:
            console.log('üìä –†–∞–∑–¥–µ–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: dashboard');
            loadDashboard();
    }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
async function loadDashboard() {
    console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—à–±–æ—Ä–¥');
    const statsCards = document.getElementById('statsCards');
    if (!statsCards) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç statsCards –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    statsCards.innerHTML = `
        <div class="col-md-3 mb-3">
            <div class="card text-white bg-primary">
                <div class="card-body text-center">
                    <h5 class="card-title">–°—Ç—É–¥–µ–Ω—Ç—ã</h5>
                    <p class="card-text display-6" id="studentsCount">0</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-white bg-success">
                <div class="card-body text-center">
                    <h5 class="card-title">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</h5>
                    <p class="card-text display-6" id="teachersCount">0</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-white bg-info">
                <div class="card-body text-center">
                    <h5 class="card-title">–ü—Ä–µ–¥–º–µ—Ç—ã</h5>
                    <p class="card-text display-6" id="subjectsCount">0</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-white bg-warning">
                <div class="card-body text-center">
                    <h5 class="card-title">–û—Ü–µ–Ω–∫–∏</h5>
                    <p class="card-text display-6" id="gradesCount">0</p>
                </div>
            </div>
        </div>
    `;

    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const response = await fetch('/api/statistics/overview', {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const stats = await response.json();
            console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', stats);
            
            document.getElementById('studentsCount').textContent = stats.students || '0';
            document.getElementById('teachersCount').textContent = stats.teachers || '0';
            document.getElementById('subjectsCount').textContent = stats.subjects || '0';
            document.getElementById('gradesCount').textContent = stats.grades || '0';
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
            setDefaultStats();
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        setDefaultStats();
    }
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
function setDefaultStats() {
    document.getElementById('studentsCount').textContent = '4';
    document.getElementById('teachersCount').textContent = '3';
    document.getElementById('subjectsCount').textContent = '4';
    document.getElementById('gradesCount').textContent = '0';
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
async function loadStudents() {
    console.log('üë• –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤');
    try {
        const response = await fetch('/api/students', {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const students = await response.json();
            console.log('‚úÖ –°—Ç—É–¥–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', students.length);
            
            const tbody = document.getElementById('studentsTable');
            if (tbody) {
                tbody.innerHTML = students.map(student => `
                    <tr>
                        <td>${student.id}</td>
                        <td>${student.name}</td>
                        <td>${student.group_name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</td>
                        <td>${student.student_card || '–ù–µ —É–∫–∞–∑–∞–Ω'}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary" onclick="viewStudent(${student.id})">
                                –ü—Ä–æ—Å–º–æ—Ç—Ä
                            </button>
                        </td>
                    </tr>
                `).join('');
            }
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤');
            document.getElementById('studentsTable').innerHTML = `
                <tr>
                    <td colspan="5" class="text-center text-danger">
                        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                    </td>
                </tr>
            `;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        document.getElementById('studentsTable').innerHTML = `
            <tr>
                <td colspan="5" class="text-center text-danger">
                    –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
                </td>
            </tr>
        `;
    }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ü–µ–Ω–∫–∏ –∏ –∑–∞—á—ë—Ç—ã
async function loadGrades() {
    console.log('üìù –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ü–µ–Ω–∫–∏ –∏ –∑–∞—á—ë—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser);
    const content = document.getElementById('gradesContent');
    if (!content) return;
    
    if (currentUser.role === 'student') {
        // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ ...
        
    } else if (currentUser.role === 'teacher') {
        // –£–ü–†–û–©–ï–ù–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° –î–õ–Ø –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–Ø - –°–†–ê–ó–£ –ü–û–ö–ê–ó–´–í–ê–ï–ú –í–°–ï –≠–õ–ï–ú–ï–ù–¢–´
        content.innerHTML = `
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h4 class="mb-0">üë®‚Äçüè´ –ü–∞–Ω–µ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</h4>
                </div>
                <div class="card-body">
                    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è -->
                    <div class="row mb-4">
                        <div class="col-md-12">
                            <h5>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h5>
                            <div class="d-flex gap-2 flex-wrap">
                                <button class="btn btn-primary" onclick="showAddGradeModal()">
                                    <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É
                                </button>
                                <button class="btn btn-success" onclick="showAddCreditModal()">
                                    <i class="fas fa-check"></i> –î–æ–±–∞–≤–∏—Ç—å –∑–∞—á—ë—Ç
                                </button>
                                <button class="btn btn-info" onclick="showMyGroups()">
                                    <i class="fas fa-users"></i> –ú–æ–∏ –≥—Ä—É–ø–ø—ã
                                </button>
                                <button class="btn btn-warning" onclick="showMyGrades()">
                                    <i class="fas fa-list"></i> –ú–æ–∏ –æ—Ü–µ–Ω–∫–∏
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                    <div class="row mb-4">
                        <div class="col-md-12">
                            <h5>–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h5>
                            <div class="row">
                                <div class="col-md-3 mb-3">
                                    <div class="card text-white bg-primary">
                                        <div class="card-body text-center">
                                            <h6 class="card-title">–°—Ç—É–¥–µ–Ω—Ç–æ–≤</h6>
                                            <p class="card-text display-6">12</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <div class="card text-white bg-success">
                                        <div class="card-body text-center">
                                            <h6 class="card-title">–ü—Ä–µ–¥–º–µ—Ç–æ–≤</h6>
                                            <p class="card-text display-6">3</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <div class="card text-white bg-info">
                                        <div class="card-body text-center">
                                            <h6 class="card-title">–û—Ü–µ–Ω–æ–∫</h6>
                                            <p class="card-text display-6">45</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <div class="card text-white bg-warning">
                                        <div class="card-body text-center">
                                            <h6 class="card-title">–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª</h6>
                                            <p class="card-text display-6">4.2</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- –í–µ–¥–æ–º–æ—Å—Ç—å –ø–æ –≥—Ä—É–ø–ø–µ –∏ –ø—Ä–µ–¥–º–µ—Ç—É -->
                    <div class="card">
                        <div class="card-header bg-secondary text-white">
                            <h5 class="mb-0">üìã –í–µ–¥–æ–º–æ—Å—Ç—å —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏</h5>
                        </div>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <label class="form-label">–ì—Ä—É–ø–ø–∞</label>
                                    <select class="form-select" id="gradeGroupSelect">
                                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É...</option>
                                        <option value="1">–ò–¢-21</option>
                                        <option value="2">–ü-22</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">–ü—Ä–µ–¥–º–µ—Ç</label>
                                    <select class="form-select" id="gradeSubjectSelect">
                                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç...</option>
                                        <option value="1">–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python</option>
                                        <option value="2">–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</option>
                                        <option value="3">–í—ã—Å—à–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">&nbsp;</label>
                                    <button class="btn btn-primary w-100" onclick="loadGradebook()">
                                        <i class="fas fa-search"></i> –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ–¥–æ–º–æ—Å—Ç—å
                                    </button>
                                </div>
                            </div>
                            
                            <div id="gradebookResults" class="mt-3">
                                <div class="alert alert-info">
                                    <h6>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h6>
                                    <p class="mb-0">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏.</p>
                                    <p class="mb-0 mt-2">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤—ã—à–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ –∏ –∑–∞—á—ë—Ç–æ–≤.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
    } else {
        // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥)
        // ... 
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
async function loadTeacherStatistics() {
    try {
        const teacherId = currentUser.teacher_id || currentUser.id;
        const response = await fetch(`/api/teacher/${teacherId}/statistics`, {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const stats = await response.json();
            if (stats.success) {
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ API —Ä–∞–±–æ—Ç–∞–µ—Ç
                document.getElementById('teacherStudentsCount').textContent = stats.data.total_students;
                document.getElementById('teacherSubjectsCount').textContent = stats.data.total_subjects;
                document.getElementById('teacherGradesCount').textContent = stats.data.total_grades;
                document.getElementById('teacherAvgGrade').textContent = stats.data.avg_grade;
            }
        }
        // –ï—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    } catch (error) {
        console.error('Error loading teacher statistics:', error);
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –≥—Ä—É–ø–ø—ã
async function showMyGroups() {
    try {
        const teacherId = currentUser.teacher_id || currentUser.id;
        const response = await fetch(`/api/teacher/${teacherId}/groups`, {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const result = await response.json();
            if (result.success) {
                let html = '<h5>–ú–æ–∏ —É—á–µ–±–Ω—ã–µ –≥—Ä—É–ø–ø—ã</h5><div class="row">';
                
                result.data.forEach(group => {
                    html += `
                        <div class="col-md-4 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <h6 class="card-title">${group.name}</h6>
                                    <p class="card-text">
                                        <small>–ö—É—Ä—Å: ${group.course}</small><br>
                                        <small>–°—Ç—É–¥–µ–Ω—Ç–æ–≤: ${group.student_count || 0}</small><br>
                                        <small>${group.specialization || ''}</small>
                                    </p>
                                    <button class="btn btn-sm btn-outline-primary" onclick="loadGroupForGrading(${group.id})">
                                        –í—ã—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫–∏
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                html += '</div>';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∏–ª–∏ –∑–∞–º–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                document.getElementById('gradebookResults').innerHTML = html;
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø:', error);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –æ—Ü–µ–Ω–∫–∏
async function showMyGrades() {
    try {
        const teacherId = currentUser.teacher_id || currentUser.id;
        const response = await fetch(`/api/teacher/${teacherId}/grades`, {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const result = await response.json();
            if (result.success) {
                let html = `
                    <h5>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏</h5>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>–°—Ç—É–¥–µ–Ω—Ç</th>
                                    <th>–ü—Ä–µ–¥–º–µ—Ç</th>
                                    <th>–¢–∏–ø</th>
                                    <th>–†–µ–∑—É–ª—å—Ç–∞—Ç</th>
                                    <th>–î–∞—Ç–∞</th>
                                </tr>
                            </thead>
                            <tbody>
                `;
                
                result.data.forEach(grade => {
                    html += `
                        <tr>
                            <td>${grade.student_name}</td>
                            <td>${grade.subject_name}</td>
                            <td>${getGradeTypeText(grade.grade_type)}</td>
                            <td>
                                <span class="badge bg-${getGradeColor(grade.grade, grade.is_pass, grade.grade_type)}">
                                    ${getGradeDisplay(grade.grade, grade.is_pass, grade.grade_type)}
                                </span>
                            </td>
                            <td>${formatDate(grade.date)}</td>
                        </tr>
                    `;
                });
                
                html += '</tbody></table></div>';
                document.getElementById('gradebookResults').innerHTML = html;
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ü–µ–Ω–æ–∫:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä—É–ø–ø—ã –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫
async function loadGroupForGrading(groupId) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–∞—Å—Å–æ–≤–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫
    alert(`–ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä—É–ø–ø—ã ${groupId} –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ - —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ`);
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
async function loadStatistics() {
    console.log('üìà –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
    const content = document.getElementById('statisticsContent');
    if (!content) return;

    content.innerHTML = `
        <div class="row">
            <div class="col-md-6 mb-3">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h5>
                    </div>
                    <div class="card-body">
                        <div id="generalStats">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <div class="card">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">üë• –ì—Ä—É–ø–ø—ã</h5>
                    </div>
                    <div class="card-body">
                        <div id="groupsStats">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                    </div>
                </div>
            </div>
        </div>
    `;

    try {
        const response = await fetch('/api/statistics/overview', {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const stats = await response.json();
            
            document.getElementById('generalStats').innerHTML = `
                <div class="list-group">
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        –°—Ç—É–¥–µ–Ω—Ç—ã
                        <span class="badge bg-primary rounded-pill fs-6">${stats.students || 0}</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
                        <span class="badge bg-success rounded-pill fs-6">${stats.teachers || 0}</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        –ü—Ä–µ–¥–º–µ—Ç—ã
                        <span class="badge bg-info rounded-pill fs-6">${stats.subjects || 0}</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        –í—Å–µ–≥–æ –æ—Ü–µ–Ω–æ–∫
                        <span class="badge bg-warning rounded-pill fs-6">${stats.grades || 0}</span>
                    </div>
                </div>
            `;
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã
        const groupsResponse = await fetch('/api/groups', {
            headers: getAuthHeaders()
        });

        if (groupsResponse.ok) {
            const groups = await groupsResponse.json();
            document.getElementById('groupsStats').innerHTML = `
                <div class="list-group">
                    ${groups.map(group => `
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            ${group.name}
                            <small class="text-muted">${group.specialization || '–û–±—â–∞—è'}</small>
                        </div>
                    `).join('')}
                </div>
            `;
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        content.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</div>';
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getAuthHeaders() {
    return {
        'Authorization': `Bearer ${authToken}`,
        'Content-Type': 'application/json'
    };
}

function getGradeTypeText(type) {
    const types = {
        'exam': '–≠–∫–∑–∞–º–µ–Ω',
        'test': '–ó–∞—á—ë—Ç',
        'coursework': '–ö—É—Ä—Å–æ–≤–∞—è',
        'practice': '–ü—Ä–∞–∫—Ç–∏–∫–∞'
    };
    return types[type] || type || '–ù–µ —É–∫–∞–∑–∞–Ω';
}

function getGradeColor(grade) {
    if (grade >= 4) return 'success';
    if (grade === 3) return 'warning';
    return 'danger';
}

function showAddStudentForm() {
    alert('üìù –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!');
}

function viewStudent(studentId) {
    alert(`üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—É–¥–µ–Ω—Ç–∞ ID: ${studentId}\n–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!`);
}

function logout() {
    console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    localStorage.removeItem('authToken');
    localStorage.removeItem('currentUser');
    location.reload();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–∏–ø–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–∏–π
function getGradeTypeText(type) {
    const types = {
        'exam': '–≠–∫–∑–∞–º–µ–Ω',
        'test': '–ó–∞—á—ë—Ç',
        'credit': '–ó–∞—á—ë—Ç',
        'coursework': '–ö—É—Ä—Å–æ–≤–∞—è',
        'practice': '–ü—Ä–∞–∫—Ç–∏–∫–∞'
    };
    return types[type] || type || '–ù–µ —É–∫–∞–∑–∞–Ω';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –æ—Ü–µ–Ω–∫–∏/–∑–∞—á—ë—Ç–∞
function getGradeColor(grade, is_pass, grade_type) {
    // –î–ª—è –∑–∞—á—ë—Ç–æ–≤
    if (grade_type === 'test' || grade_type === 'credit') {
        return is_pass ? 'success' : 'danger';
    }
    
    // –î–ª—è –æ—Ü–µ–Ω–æ–∫
    if (grade >= 4) return 'success';
    if (grade === 3) return 'warning';
    return 'danger';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏/–∑–∞—á—ë—Ç–∞
function getGradeDisplay(grade, is_pass, grade_type) {
    // –î–ª—è –∑–∞—á—ë—Ç–æ–≤
    if (grade_type === 'test' || grade_type === 'credit') {
        return is_pass ? '–ó–∞—á—ë—Ç' : '–ù–µ–∑–∞—á—ë—Ç';
    }
    
    // –î–ª—è –æ—Ü–µ–Ω–æ–∫
    return grade || '‚Äî';
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    if (!dateString) return '';
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU');
}

// –°—Ç–∞—Ç—É—Å –æ—Ü–µ–Ω–∫–∏
function getGradeStatus(grade) {
    if (grade >= 4) return '<span class="badge bg-success">–°–¥–∞–Ω–æ</span>';
    if (grade === 3) return '<span class="badge bg-warning">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ</span>';
    return '<span class="badge bg-danger">–ù–µ —Å–¥–∞–Ω–æ</span>';
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä—É–ø–ø –∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
async function loadGroupsAndSubjects() {
    try {
        const [groupsRes, subjectsRes] = await Promise.all([
            fetch('/api/groups', { headers: getAuthHeaders() }),
            fetch('/api/subjects', { headers: getAuthHeaders() })
        ]);

        if (groupsRes.ok) {
            const groups = await groupsRes.json();
            const groupSelect = document.getElementById('gradeGroupSelect');
            groupSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É...</option>' +
                groups.map(group => `<option value="${group.id}">${group.name} - ${group.specialization}</option>`).join('');
        }

        if (subjectsRes.ok) {
            const subjects = await subjectsRes.json();
            const subjectSelect = document.getElementById('gradeSubjectSelect');
            subjectSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç...</option>' +
                subjects.map(subject => `<option value="${subject.id}">${subject.name}</option>`).join('');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏ (–¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π)
async function loadGradebook() {
    const groupId = document.getElementById('gradeGroupSelect').value;
    const subjectId = document.getElementById('gradeSubjectSelect').value;
    
    if (!groupId || !subjectId) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏ –ø—Ä–µ–¥–º–µ—Ç');
        return;
    }
    
    const resultsDiv = document.getElementById('gradebookResults');
    resultsDiv.innerHTML = '<div class="text-center"><div class="spinner-border"></div><p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏...</p></div>';
    
    try {
        const response = await fetch(`/api/gradebook/${groupId}/${subjectId}`, {
            headers: getAuthHeaders()
        });
        
        if (response.ok) {
            const data = await response.json();
            displayGradebook(data);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ–¥–æ–º–æ—Å—Ç–∏:', error);
        resultsDiv.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ–¥–æ–º–æ—Å—Ç–∏</div>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–µ–¥–æ–º–æ—Å—Ç–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
function displayGradebook(data) {
    const resultsDiv = document.getElementById('gradebookResults');
    
    resultsDiv.innerHTML = `
        <div class="card">
            <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">–í–µ–¥–æ–º–æ—Å—Ç—å: ${data.group} - ${data.subject}</h5>
                <div>
                    <button class="btn btn-sm btn-light me-2" onclick="showAddGradeToGroup()">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –≥—Ä—É–ø–ø–µ
                    </button>
                    <button class="btn btn-sm btn-light" onclick="showAddCreditToGroup()">
                        <i class="fas fa-check"></i> –î–æ–±–∞–≤–∏—Ç—å –∑–∞—á—ë—Ç –≥—Ä—É–ø–ø–µ
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>–°—Ç—É–¥–µ–Ω—Ç</th>
                                <th>–ù–æ–º–µ—Ä –∑–∞—á—ë—Ç–∫–∏</th>
                                <th>–¢–∏–ø —Ä–∞–±–æ—Ç—ã</th>
                                <th>–†–µ–∑—É–ª—å—Ç–∞—Ç</th>
                                <th>–î–∞—Ç–∞</th>
                                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${data.students.map(student => `
                                <tr>
                                    <td>${student.name}</td>
                                    <td>${student.student_card}</td>
                                    <td>${student.grade_type ? getGradeTypeText(student.grade_type) : '‚Äî'}</td>
                                    <td>
                                        ${student.grade || student.is_pass !== undefined ? `
                                            <span class="badge bg-${getGradeColor(student.grade, student.is_pass, student.grade_type)}">
                                                ${getGradeDisplay(student.grade, student.is_pass, student.grade_type)}
                                            </span>
                                        ` : '‚Äî'}
                                    </td>
                                    <td>${student.date ? formatDate(student.date) : '‚Äî'}</td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            ${!student.grade_type ? `
                                                <button class="btn btn-outline-primary" onclick="showAddGradeModalForStudent(${student.student_id})" title="–î–æ–±–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                                <button class="btn btn-outline-success" onclick="showAddCreditModalForStudent(${student.student_id})" title="–î–æ–±–∞–≤–∏—Ç—å –∑–∞—á—ë—Ç">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            ` : `
                                                <button class="btn btn-outline-warning" onclick="editGrade(${student.id || student.grade_id})" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="btn btn-outline-danger" onclick="deleteGrade(${student.id || student.grade_id})" title="–£–¥–∞–ª–∏—Ç—å">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            `}
                                        </div>
                                    </td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    `;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
async function showAddGradeModalForStudent(studentId) {
    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    document.getElementById('addGradeForm').reset();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    const studentSelect = document.getElementById('gradeStudentSelect');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if (studentSelect.options.length <= 1) {
        await loadStudentsForModal('gradeStudentSelect');
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    studentSelect.value = studentId;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Ç–µ–∫—É—â–µ–π –≤–µ–¥–æ–º–æ—Å—Ç–∏
    const subjectSelect = document.getElementById('gradeSubjectSelect');
    const currentSubjectId = document.getElementById('gradeSubjectSelect').value;
    if (currentSubjectId) {
        document.getElementById('gradeSubjectSelectModal').value = currentSubjectId;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
    document.getElementById('gradeDate').valueAsDate = new Date();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = new bootstrap.Modal(document.getElementById('addGradeModal'));
    modal.show();
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞—á—ë—Ç–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
async function showAddCreditModalForStudent(studentId) {
    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    document.getElementById('addCreditForm').reset();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    const studentSelect = document.getElementById('creditStudentSelect');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if (studentSelect.options.length <= 1) {
        await loadStudentsForModal('creditStudentSelect');
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    studentSelect.value = studentId;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Ç–µ–∫—É—â–µ–π –≤–µ–¥–æ–º–æ—Å—Ç–∏
    const currentSubjectId = document.getElementById('gradeSubjectSelect').value;
    if (currentSubjectId) {
        document.getElementById('creditSubjectSelect').value = currentSubjectId;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
    document.getElementById('creditDate').valueAsDate = new Date();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = new bootstrap.Modal(document.getElementById('addCreditModal'));
    modal.show();
}

// –£–¥–∞–ª–∏—Ç—å –æ—Ü–µ–Ω–∫—É
async function deleteGrade(gradeId) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –æ—Ü–µ–Ω–∫—É?')) {
        return;
    }

    try {
        const response = await fetch(`/api/grades/${gradeId}`, {
            method: 'DELETE',
            headers: getAuthHeaders()
        });

        const result = await response.json();
        
        if (result.success) {
            alert('‚úÖ –û—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!');
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ–¥–æ–º–æ—Å—Ç—å
            loadGradebook();
        } else {
            alert('‚ùå –û—à–∏–±–∫–∞: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏:', error);
        alert('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏');
    }
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ü–µ–Ω–∫—É (–∑–∞–≥–ª—É—à–∫–∞ - –º–æ–∂–Ω–æ —Ä–∞–∑–≤–∏—Ç—å)
function editGrade(gradeId) {
    alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ ${gradeId} - —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n–ü–æ–∫–∞ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –æ—Ü–µ–Ω–∫—É.`);
}

// –ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –≥—Ä—É–ø–ø–µ
function showAddGradeToGroup() {
    const groupId = document.getElementById('gradeGroupSelect').value;
    const subjectId = document.getElementById('gradeSubjectSelect').value;
    
    if (!groupId || !subjectId) {
        alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏ –ø—Ä–µ–¥–º–µ—Ç');
        return;
    }
    
    alert(`–ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã ${groupId} –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É ${subjectId} - —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ`);
}

// –ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—á—ë—Ç–∞ –≥—Ä—É–ø–ø–µ
function showAddCreditToGroup() {
    const groupId = document.getElementById('gradeGroupSelect').value;
    const subjectId = document.getElementById('gradeSubjectSelect').value;
    
    if (!groupId || !subjectId) {
        alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏ –ø—Ä–µ–¥–º–µ—Ç');
        return;
    }
    
    alert(`–ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—á—ë—Ç–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã ${groupId} –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É ${subjectId} - —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ`);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ü–µ–Ω–∫–∏ - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
async function submitGrade() {
    const formData = {
        student_id: document.getElementById('gradeStudentSelect').value,
        subject_id: document.getElementById('gradeSubjectSelectModal').value,
        grade: parseInt(document.getElementById('gradeValueSelect').value),
        grade_type: document.getElementById('gradeTypeSelect').value,
        date: document.getElementById('gradeDate').value,
        notes: document.getElementById('gradeNotes').value
    };

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.student_id || !formData.subject_id || !formData.grade || !formData.grade_type || !formData.date) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
        return;
    }

    try {
        const response = await fetch('/api/grades', {
            method: 'POST',
            headers: getAuthHeaders(),
            body: JSON.stringify(formData)
        });

        const result = await response.json();
        
        if (result.success) {
            alert('‚úÖ –û—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            const modal = bootstrap.Modal.getInstance(document.getElementById('addGradeModal'));
            modal.hide();
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ–¥–æ–º–æ—Å—Ç—å –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞
            if (document.getElementById('gradebookResults').innerHTML.includes('–í–µ–¥–æ–º–æ—Å—Ç—å')) {
                loadGradebook();
            }
        } else {
            alert('‚ùå –û—à–∏–±–∫–∞: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏:', error);
        alert('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏');
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—á—ë—Ç–∞ - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
async function submitCredit() {
    const creditResult = document.querySelector('input[name="creditResult"]:checked');
    
    const formData = {
        student_id: document.getElementById('creditStudentSelect').value,
        subject_id: document.getElementById('creditSubjectSelect').value,
        is_pass: creditResult ? parseInt(creditResult.value) : null,
        grade_type: document.getElementById('creditTypeSelect').value,
        date: document.getElementById('creditDate').value,
        notes: document.getElementById('creditNotes').value
    };

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.student_id || !formData.subject_id || formData.is_pass === null || !formData.grade_type || !formData.date) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
        return;
    }

    try {
        const response = await fetch('/api/grades/credit', {
            method: 'POST',
            headers: getAuthHeaders(),
            body: JSON.stringify(formData)
        });

        const result = await response.json();
        
        if (result.success) {
            alert('‚úÖ –ó–∞—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            const modal = bootstrap.Modal.getInstance(document.getElementById('addCreditModal'));
            modal.hide();
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ–¥–æ–º–æ—Å—Ç—å –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞
            if (document.getElementById('gradebookResults').innerHTML.includes('–í–µ–¥–æ–º–æ—Å—Ç—å')) {
                loadGradebook();
            }
        } else {
            alert('‚ùå –û—à–∏–±–∫–∞: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞—á—ë—Ç–∞:', error);
        alert('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞—á—ë—Ç–∞');
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è onclick –∞—Ç—Ä–∏–±—É—Ç–æ–≤
window.showSection = showSection;
window.showAddStudentForm = showAddStudentForm;
window.viewStudent = viewStudent;
window.logout = logout;
window.loadGradebook = loadGradebook;
window.showAddGradeModal = showAddGradeModal;
window.showAddCreditModal = showAddCreditModal;
window.submitGrade = submitGrade;
window.submitCredit = submitCredit;
window.showMyGroups = showMyGroups;
window.showMyGrades = showMyGrades;
window.loadGroupForGrading = loadGroupForGrading;
window.showAddGradeModalForStudent = showAddGradeModalForStudent;
window.showAddCreditModalForStudent = showAddCreditModalForStudent;
window.deleteGrade = deleteGrade;
window.editGrade = editGrade;
window.showAddGradeToGroup = showAddGradeToGroup;
window.showAddCreditToGroup = showAddCreditToGroup;

console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!');