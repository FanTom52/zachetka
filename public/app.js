// public/app.js - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–π –∫–æ–¥
let currentUser = null;
let authToken = null;

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    const loginForm = document.getElementById('loginForm');
    if (loginForm) {
        loginForm.addEventListener('submit', handleLogin);
        console.log('‚úÖ –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    checkAuthStatus();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞
async function handleLogin(e) {
    e.preventDefault();
    console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞...');
    
    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;

    try {
        const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ username, password })
        });

        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);

        if (data.success) {
            authToken = data.token;
            currentUser = data.user;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
            localStorage.setItem('authToken', authToken);
            localStorage.setItem('currentUser', JSON.stringify(currentUser));
            
            showMainApp();
            loadDashboard();
        } else {
            alert('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function checkAuthStatus() {
    const savedToken = localStorage.getItem('authToken');
    const savedUser = localStorage.getItem('currentUser');
    
    if (savedToken && savedUser) {
        authToken = savedToken;
        currentUser = JSON.parse(savedUser);
        showMainApp();
        loadDashboard();
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', currentUser);
    } else {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
function showMainApp() {
    console.log('üì± –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
    document.getElementById('loginPage').classList.add('hidden');
    document.getElementById('mainApp').classList.remove('hidden');
    document.getElementById('userInfo').textContent = 
        `${currentUser.name} (${currentUser.role})`;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    initNavigation();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function initNavigation() {
    console.log('üß≠ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é
    document.querySelectorAll('.list-group-item').forEach(item => {
        item.addEventListener('click', function(e) {
            e.preventDefault();
            const section = this.getAttribute('onclick')?.match(/showSection\('(\w+)'\)/)?.[1];
            if (section) {
                showSection(section);
            }
        });
    });

    // –°–∫—Ä—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª "–°—Ç—É–¥–µ–Ω—Ç—ã" –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    if (currentUser.role === 'student') {
        const studentsNavItem = document.querySelector('a[onclick*="students"]');
        if (studentsNavItem) {
            studentsNavItem.style.display = 'none';
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
    const logoutBtn = document.querySelector('button[onclick="logout()"]');
    if (logoutBtn) {
        logoutBtn.addEventListener('click', logout);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞
    const addStudentBtn = document.querySelector('button[onclick="showAddStudentForm()"]');
    if (addStudentBtn) {
        addStudentBtn.addEventListener('click', showAddStudentForm);
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏
function showSection(sectionName) {
    console.log('üìÇ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–∞–∑–¥–µ–ª:', sectionName);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã
    document.querySelectorAll('.section').forEach(section => {
        section.classList.add('hidden');
    });
    
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
    document.querySelectorAll('.list-group-item').forEach(item => {
        item.classList.remove('active');
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—É–Ω–∫—Ç—É
    document.querySelectorAll('.list-group-item').forEach(item => {
        if (item.getAttribute('onclick')?.includes(sectionName)) {
            item.classList.add('active');
        }
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª
    const targetSection = document.getElementById(sectionName + 'Section');
    if (targetSection) {
        targetSection.classList.remove('hidden');
    } else {
        console.error('‚ùå –†–∞–∑–¥–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', sectionName);
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞
    switch(sectionName) {
        case 'dashboard':
            loadDashboard();
            break;
        case 'students':
            loadStudents();
            break;
        case 'grades':
            loadGrades();
            break;
        case 'statistics':
            loadStatistics();
            break;
        default:
            console.log('üìä –†–∞–∑–¥–µ–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: dashboard');
            loadDashboard();
    }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
async function loadDashboard() {
    console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—à–±–æ—Ä–¥');
    const statsCards = document.getElementById('statsCards');
    if (!statsCards) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç statsCards –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    statsCards.innerHTML = `
        <div class="col-md-3 mb-3">
            <div class="card text-white bg-primary">
                <div class="card-body text-center">
                    <h5 class="card-title">–°—Ç—É–¥–µ–Ω—Ç—ã</h5>
                    <p class="card-text display-6" id="studentsCount">0</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-white bg-success">
                <div class="card-body text-center">
                    <h5 class="card-title">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</h5>
                    <p class="card-text display-6" id="teachersCount">0</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-white bg-info">
                <div class="card-body text-center">
                    <h5 class="card-title">–ü—Ä–µ–¥–º–µ—Ç—ã</h5>
                    <p class="card-text display-6" id="subjectsCount">0</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card text-white bg-warning">
                <div class="card-body text-center">
                    <h5 class="card-title">–û—Ü–µ–Ω–∫–∏</h5>
                    <p class="card-text display-6" id="gradesCount">0</p>
                </div>
            </div>
        </div>
    `;

    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const response = await fetch('/api/statistics/overview', {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const stats = await response.json();
            console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', stats);
            
            document.getElementById('studentsCount').textContent = stats.students || '0';
            document.getElementById('teachersCount').textContent = stats.teachers || '0';
            document.getElementById('subjectsCount').textContent = stats.subjects || '0';
            document.getElementById('gradesCount').textContent = stats.grades || '0';
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
            setDefaultStats();
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        setDefaultStats();
    }
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
function setDefaultStats() {
    document.getElementById('studentsCount').textContent = '4';
    document.getElementById('teachersCount').textContent = '3';
    document.getElementById('subjectsCount').textContent = '4';
    document.getElementById('gradesCount').textContent = '0';
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
async function loadStudents() {
    console.log('üë• –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤');
    try {
        const response = await fetch('/api/students', {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const students = await response.json();
            console.log('‚úÖ –°—Ç—É–¥–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', students.length);
            
            const tbody = document.getElementById('studentsTable');
            if (tbody) {
                tbody.innerHTML = students.map(student => `
                    <tr>
                        <td>${student.id}</td>
                        <td>${student.name}</td>
                        <td>${student.group_name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</td>
                        <td>${student.student_card || '–ù–µ —É–∫–∞–∑–∞–Ω'}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary" onclick="viewStudent(${student.id})">
                                –ü—Ä–æ—Å–º–æ—Ç—Ä
                            </button>
                        </td>
                    </tr>
                `).join('');
            }
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤');
            document.getElementById('studentsTable').innerHTML = `
                <tr>
                    <td colspan="5" class="text-center text-danger">
                        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                    </td>
                </tr>
            `;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        document.getElementById('studentsTable').innerHTML = `
            <tr>
                <td colspan="5" class="text-center text-danger">
                    –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
                </td>
            </tr>
        `;
    }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ü–µ–Ω–∫–∏
async function loadGrades() {
    console.log('üìù –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser);
    const content = document.getElementById('gradesContent');
    if (!content) return;
    
    if (currentUser.role === 'student') {
        content.innerHTML = `
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">üìö –ú–æ–∏ –æ—Ü–µ–Ω–∫–∏</h4>
                </div>
                <div class="card-body">
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                        </div>
                        <p class="mt-2">–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö –æ—Ü–µ–Ω–æ–∫...</p>
                        <small class="text-muted">User ID: ${currentUser.id}</small>
                    </div>
                </div>
            </div>
        `;
        
        try {
            console.log('üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ü–µ–Ω–∫–∏ –¥–ª—è student ID:', currentUser.id);
            const response = await fetch(`/api/grades/student/${currentUser.id}`, {
                headers: getAuthHeaders()
            });

            console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText);
            
            if (response.ok) {
                const grades = await response.json();
                console.log('üìä –ü–æ–ª—É—á–µ–Ω—ã –æ—Ü–µ–Ω–∫–∏:', grades);
                
                if (grades.length > 0) {
    const averageGrade = grades.reduce((sum, grade) => sum + grade.grade, 0) / grades.length;
    
    content.innerHTML = `
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">üìö –ú–æ–∏ –æ—Ü–µ–Ω–∫–∏</h4>
            </div>
            <div class="card-body">
                <div class="alert alert-success">
                    <h5>‚úÖ –£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å</h5>
                    <p class="mb-0">–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: <strong>${averageGrade.toFixed(2)}</strong></p>
                </div>
                
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>–ü—Ä–µ–¥–º–µ—Ç</th>
                                <th>–û—Ü–µ–Ω–∫–∞</th>
                                <th>–¢–∏–ø —Ä–∞–±–æ—Ç—ã</th>
                                <th>–î–∞—Ç–∞</th>
                                <th>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${grades.map(grade => `
                                <tr>
                                    <td>${grade.subject_name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</td>
                                    <td>
                                        <span class="badge bg-${grade.grade >= 4 ? 'success' : grade.grade === 3 ? 'warning' : 'danger'}">
                                            ${grade.grade}
                                        </span>
                                    </td>
                                    <td>${grade.grade_type === 'exam' ? '–≠–∫–∑–∞–º–µ–Ω' : 
                                          grade.grade_type === 'test' ? '–ó–∞—á—ë—Ç' : 
                                          grade.grade_type === 'coursework' ? '–ö—É—Ä—Å–æ–≤–∞—è' : 
                                          grade.grade_type === 'practice' ? '–ü—Ä–∞–∫—Ç–∏–∫–∞' : grade.grade_type}</td>
                                    <td>${grade.date || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</td>
                                    <td>${grade.teacher_name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
                
                <div class="row mt-3">
                    <div class="col-md-4">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h6>–í—Å–µ–≥–æ –æ—Ü–µ–Ω–æ–∫</h6>
                                <h4>${grades.length}</h4>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h6>–û—Ç–ª–∏—á–Ω—ã—Ö (5)</h6>
                                <h4 class="text-success">${grades.filter(g => g.grade === 5).length}</h4>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h6>–•–æ—Ä–æ—à–∏—Ö (4)</h6>
                                <h4 class="text-info">${grades.filter(g => g.grade === 4).length}</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;

                } else {
                    content.innerHTML = `
                        <div class="card">
                            <div class="card-header bg-primary text-white">
                                <h4 class="mb-0">üìö –ú–æ–∏ –æ—Ü–µ–Ω–∫–∏</h4>
                            </div>
                            <div class="card-body text-center py-5">
                                <div class="text-muted">
                                    <i class="fas fa-clipboard-list fa-3x mb-3"></i>
                                    <h5>–û—Ü–µ–Ω–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç</h5>
                                    <p>–í–∞—à–∏ –æ—Ü–µ–Ω–∫–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∏—Ö –≤—ã—Å—Ç–∞–≤—è—Ç.</p>
                                </div>
                            </div>
                        </div>
                    `;
                }
            } else {
                const errorText = await response.text();
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
                content.innerHTML = `
                    <div class="alert alert-danger">
                        <h5>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ü–µ–Ω–æ–∫</h5>
                        <p>–°—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}</p>
                        <p>–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ (F12)</p>
                    </div>
                `;
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
            content.innerHTML = `
                <div class="alert alert-danger">
                    <h5>‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</h5>
                    <p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É: ${error.message}</p>
                </div>
            `;
        }
    } else {
        // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        content.innerHTML = `
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h4 class="mb-0">üë®‚Äçüè´ –ñ—É—Ä–Ω–∞–ª –æ—Ü–µ–Ω–æ–∫</h4>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label class="form-label">–ì—Ä—É–ø–ø–∞</label>
                            <select class="form-select" id="gradeGroupSelect">
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É...</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">–ü—Ä–µ–¥–º–µ—Ç</label>
                            <select class="form-select" id="gradeSubjectSelect">
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç...</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">&nbsp;</label>
                            <button class="btn btn-primary w-100" onclick="loadGradebook()">
                                <i class="fas fa-search"></i> –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ–¥–æ–º–æ—Å—Ç—å
                            </button>
                        </div>
                    </div>
                    
                    <div id="gradebookResults" class="mt-3">
                        <div class="alert alert-info">
                            <h6>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h6>
                            <p class="mb-0">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏.</p>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –≤—ã–±–æ—Ä–∞
        loadGroupsAndSubjects();
    }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
async function loadStatistics() {
    console.log('üìà –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
    const content = document.getElementById('statisticsContent');
    if (!content) return;

    content.innerHTML = `
        <div class="row">
            <div class="col-md-6 mb-3">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h5>
                    </div>
                    <div class="card-body">
                        <div id="generalStats">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <div class="card">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">üë• –ì—Ä—É–ø–ø—ã</h5>
                    </div>
                    <div class="card-body">
                        <div id="groupsStats">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                    </div>
                </div>
            </div>
        </div>
    `;

    try {
        const response = await fetch('/api/statistics/overview', {
            headers: getAuthHeaders()
        });

        if (response.ok) {
            const stats = await response.json();
            
            document.getElementById('generalStats').innerHTML = `
                <div class="list-group">
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        –°—Ç—É–¥–µ–Ω—Ç—ã
                        <span class="badge bg-primary rounded-pill fs-6">${stats.students || 0}</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
                        <span class="badge bg-success rounded-pill fs-6">${stats.teachers || 0}</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        –ü—Ä–µ–¥–º–µ—Ç—ã
                        <span class="badge bg-info rounded-pill fs-6">${stats.subjects || 0}</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        –í—Å–µ–≥–æ –æ—Ü–µ–Ω–æ–∫
                        <span class="badge bg-warning rounded-pill fs-6">${stats.grades || 0}</span>
                    </div>
                </div>
            `;
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã
        const groupsResponse = await fetch('/api/groups', {
            headers: getAuthHeaders()
        });

        if (groupsResponse.ok) {
            const groups = await groupsResponse.json();
            document.getElementById('groupsStats').innerHTML = `
                <div class="list-group">
                    ${groups.map(group => `
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            ${group.name}
                            <small class="text-muted">${group.specialization || '–û–±—â–∞—è'}</small>
                        </div>
                    `).join('')}
                </div>
            `;
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        content.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</div>';
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getAuthHeaders() {
    return {
        'Authorization': `Bearer ${authToken}`,
        'Content-Type': 'application/json'
    };
}

function getGradeTypeText(type) {
    const types = {
        'exam': '–≠–∫–∑–∞–º–µ–Ω',
        'test': '–ó–∞—á—ë—Ç',
        'coursework': '–ö—É—Ä—Å–æ–≤–∞—è',
        'practice': '–ü—Ä–∞–∫—Ç–∏–∫–∞'
    };
    return types[type] || type || '–ù–µ —É–∫–∞–∑–∞–Ω';
}

function getGradeColor(grade) {
    if (grade >= 4) return 'success';
    if (grade === 3) return 'warning';
    return 'danger';
}

function showAddStudentForm() {
    alert('üìù –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!');
}

function viewStudent(studentId) {
    alert(`üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—É–¥–µ–Ω—Ç–∞ ID: ${studentId}\n–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!`);
}

function logout() {
    console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    localStorage.removeItem('authToken');
    localStorage.removeItem('currentUser');
    location.reload();
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    if (!dateString) return '';
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU');
}

// –°—Ç–∞—Ç—É—Å –æ—Ü–µ–Ω–∫–∏
function getGradeStatus(grade) {
    if (grade >= 4) return '<span class="badge bg-success">–°–¥–∞–Ω–æ</span>';
    if (grade === 3) return '<span class="badge bg-warning">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ</span>';
    return '<span class="badge bg-danger">–ù–µ —Å–¥–∞–Ω–æ</span>';
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä—É–ø–ø –∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
async function loadGroupsAndSubjects() {
    try {
        const [groupsRes, subjectsRes] = await Promise.all([
            fetch('/api/groups', { headers: getAuthHeaders() }),
            fetch('/api/subjects', { headers: getAuthHeaders() })
        ]);

        if (groupsRes.ok) {
            const groups = await groupsRes.json();
            const groupSelect = document.getElementById('gradeGroupSelect');
            groupSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É...</option>' +
                groups.map(group => `<option value="${group.id}">${group.name} - ${group.specialization}</option>`).join('');
        }

        if (subjectsRes.ok) {
            const subjects = await subjectsRes.json();
            const subjectSelect = document.getElementById('gradeSubjectSelect');
            subjectSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç...</option>' +
                subjects.map(subject => `<option value="${subject.id}">${subject.name}</option>`).join('');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏ (–¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π)
async function loadGradebook() {
    const groupId = document.getElementById('gradeGroupSelect').value;
    const subjectId = document.getElementById('gradeSubjectSelect').value;
    
    if (!groupId || !subjectId) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏ –ø—Ä–µ–¥–º–µ—Ç');
        return;
    }
    
    const resultsDiv = document.getElementById('gradebookResults');
    resultsDiv.innerHTML = '<div class="text-center"><div class="spinner-border"></div><p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏...</p></div>';
    
    try {
        const response = await fetch(`/api/gradebook/${groupId}/${subjectId}`, {
            headers: getAuthHeaders()
        });
        
        if (response.ok) {
            const data = await response.json();
            displayGradebook(data);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ–¥–æ–º–æ—Å—Ç–∏:', error);
        resultsDiv.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ–¥–æ–º–æ—Å—Ç–∏</div>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–µ–¥–æ–º–æ—Å—Ç–∏
function displayGradebook(data) {
    const resultsDiv = document.getElementById('gradebookResults');
    
    resultsDiv.innerHTML = `
        <div class="card">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">–í–µ–¥–æ–º–æ—Å—Ç—å: ${data.group} - ${data.subject}</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>–°—Ç—É–¥–µ–Ω—Ç</th>
                                <th>–ù–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞</th>
                                <th>–û—Ü–µ–Ω–∫–∞</th>
                                <th>–¢–∏–ø</th>
                                <th>–î–∞—Ç–∞</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${data.students.map(student => `
                                <tr>
                                    <td>${student.name}</td>
                                    <td>${student.student_card}</td>
                                    <td>${student.grade ? `<span class="badge bg-${getGradeColor(student.grade)}">${student.grade}</span>` : '‚Äî'}</td>
                                    <td>${student.grade_type ? getGradeTypeText(student.grade_type) : '‚Äî'}</td>
                                    <td>${student.date ? formatDate(student.date) : '‚Äî'}</td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    `;
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è onclick –∞—Ç—Ä–∏–±—É—Ç–æ–≤
window.showSection = showSection;
window.showAddStudentForm = showAddStudentForm;
window.viewStudent = viewStudent;
window.logout = logout;

console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!');