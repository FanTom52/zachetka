// routes/students.js
const express = require('express');
const router = express.Router();
const db = require('../utils/database');
const { authenticateToken } = require('../middleware/auth'); 

// üìã –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ - –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
router.get('/', async (req, res) => {
    try {
        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        res.json({
            success: true,
            data: [
                {
                    id: 1,
                    name: "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω",
                    group_name: "–¢-101",
                    average_grade: 4.5,
                    grades_count: 10
                },
                {
                    id: 2, 
                    name: "–ü–µ—Ç—Ä–æ–≤–∞ –ê–Ω–Ω–∞",
                    group_name: "–¢-101", 
                    average_grade: 4.2,
                    grades_count: 8
                },
                {
                    id: 3,
                    name: "–°–∏–¥–æ—Ä–æ–≤ –ü–µ—Ç—Ä",
                    group_name: "–¢-102",
                    average_grade: 3.8,
                    grades_count: 12
                }
            ]
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤'
        });
    }
});

// üìã –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≥—Ä—É–ø–ø—ã
router.get('/group/:groupId', authenticateToken, async (req, res) => {
    try {
        const { groupId } = req.params;
        
        const sql = `
            SELECT id, name, student_card, email
            FROM students 
            WHERE group_id = ?
            ORDER BY name
        `;
        
        db.all(sql, [groupId], (err, students) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:', err);
                return res.status(500).json({
                    success: false,
                    error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤'
                });
            }
            
            res.json({
                success: true,
                data: students
            });
        });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≥—Ä—É–ø–ø—ã:', error);
        res.status(500).json({
            success: false,
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
});

module.exports = router;