// routes/statistics.js - –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ê
const express = require('express');
const router = express.Router();
const PDFGenerator = require('../utils/pdf-generator');

// üìÑ PDF –æ—Ç—á–µ—Ç –ø–æ —Å—Ç—É–¥–µ–Ω—Ç—É - –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
router.get('/student/:studentId/pdf', async (req, res) => {
    try {
        const studentId = req.params.studentId;
        console.log('üìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞:', studentId);

        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        const testStudent = {
            name: "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
            group: "–¢-101"
        };

        const testGrades = [
            { subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", grade: 5, date: new Date() },
            { subject: "–§–∏–∑–∏–∫–∞", grade: 4, date: new Date() },
            { subject: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", grade: 5, date: new Date() }
        ];

        const testStatistics = {
            averageGrade: 4.7,
            performance: 100,
            totalGrades: 3,
            bySubject: {
                "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞": { average: 5, count: 1 },
                "–§–∏–∑–∏–∫–∞": { average: 4, count: 1 },
                "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞": { average: 5, count: 1 }
            }
        };

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
        const pdfGenerator = new PDFGenerator();
        const pdfBuffer = await pdfGenerator.generateStudentReport(
            testStudent,
            testGrades,
            testStatistics
        );

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF
        res.setHeader('Content-Type', 'application/pdf');
        res.setHeader('Content-Disposition', `attachment; filename="report-${testStudent.name}.pdf"`);
        res.send(pdfBuffer);

        console.log('‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:', error);
        res.status(500).json({ 
            success: false,
            error: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: ' + error.message
        });
    }
});

// üìÑ PDF –æ—Ç—á–µ—Ç –ø–æ –≥—Ä—É–ø–ø–µ - –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
router.get('/group/:groupId/pdf', async (req, res) => {
    try {
        const groupId = req.params.groupId;
        console.log('üìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –¥–ª—è –≥—Ä—É–ø–ø—ã:', groupId);

        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        const testGroup = {
            name: "–¢-101",
            curator: "–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–Ω–∞"
        };

        const testStudents = [
            { name: "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω", averageGrade: "4.50", performance: 90 },
            { name: "–ü–µ—Ç—Ä–æ–≤–∞ –ê–Ω–Ω–∞", averageGrade: "4.20", performance: 85 },
            { name: "–°–∏–¥–æ—Ä–æ–≤ –ü–µ—Ç—Ä", averageGrade: "3.80", performance: 75 }
        ];

        const testStatistics = {
            groupAverage: 4.17,
            totalGrades: 45,
            totalStudents: 3,
            goodGrades: 35,
            successRate: 88.9
        };

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
        const pdfGenerator = new PDFGenerator();
        const pdfBuffer = await pdfGenerator.generateGroupReport(
            testGroup,
            testStudents,
            testStatistics
        );

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF
        res.setHeader('Content-Type', 'application/pdf');
        res.setHeader('Content-Disposition', `attachment; filename="group-report-${testGroup.name}.pdf"`);
        res.send(pdfBuffer);

        console.log('‚úÖ PDF –≥—Ä—É–ø–ø—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –≥—Ä—É–ø–ø—ã:', error);
        res.status(500).json({ 
            success: false,
            error: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –≥—Ä—É–ø–ø—ã: ' + error.message
        });
    }
});

// üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã - –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
router.get('/overview', async (req, res) => {
    try {
        res.json({
            success: true,
            data: {
                students: 150,
                teachers: 15,
                subjects: 20,
                grades: 1250,
                groups: 8,
                averageGrade: 4.2
            }
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'
        });
    }
});

module.exports = router;