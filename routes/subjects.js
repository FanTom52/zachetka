// routes/subjects.js
const express = require('express');
const router = express.Router();
const db = require('../utils/database');
const { authenticateToken, requirePermission } = require('../middleware/auth');

// üìö –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
router.get('/', authenticateToken, requirePermission('view_subjects'), async (req, res) => {
    try {
        const sql = `
            SELECT s.*, t.name as teacher_name, t.department
            FROM subjects s 
            LEFT JOIN teachers t ON s.teacher_id = t.id 
            ORDER BY s.name
        `;
        
        db.all(sql, (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤:', err);
                return res.status(500).json({
                    success: false,
                    error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤'
                });
            }

            res.json({
                success: true,
                data: rows
            });
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ –º–∞—Ä—à—Ä—É—Ç–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:', error);
        res.status(500).json({
            success: false,
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
});

// ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç
router.post('/', authenticateToken, requirePermission('edit_subjects'), async (req, res) => {
    try {
        const { name, code, hours_total, hours_lecture, hours_practice, semester, teacher_id, description } = req.body;

        if (!name || !code) {
            return res.status(400).json({
                success: false,
                error: '–ù–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–æ–¥ –ø—Ä–µ–¥–º–µ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã'
            });
        }

        const sql = `
            INSERT INTO subjects (name, code, hours_total, hours_lecture, hours_practice, semester, teacher_id, description) 
            VALUES (?, ?, ?, ?, ?, ?, ?, ?)
        `;
        
        db.run(sql, [name, code, hours_total, hours_lecture, hours_practice, semester, teacher_id, description], function(err) {
            if (err) {
                return res.status(500).json({
                    success: false,
                    error: '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞'
                });
            }

            res.json({
                success: true,
                message: '–ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω',
                data: { id: this.lastID }
            });
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞:', error);
        res.status(500).json({
            success: false,
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
});

module.exports = router;