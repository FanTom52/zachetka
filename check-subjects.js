const database = require('./database');

async function checkSubjectsStructure() {
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã subjects...');
        
        const structure = await database.query(`PRAGMA table_info(subjects)`);
        console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã subjects:');
        structure.forEach(column => {
            console.log(`   ${column.name} (${column.type})`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ —Å–≤—è–∑—å —Å –≥—Ä—É–ø–ø–∞–º–∏ —á–µ—Ä–µ–∑ –¥—Ä—É–≥—É—é —Ç–∞–±–ª–∏—Ü—É
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –≥—Ä—É–ø–ø–∞–º–∏...');
        const subjectsWithGroups = await database.query(`
            SELECT s.*, sg.group_id 
            FROM subjects s 
            LEFT JOIN subject_groups sg ON s.id = sg.subject_id 
            LIMIT 5
        `);
        
        console.log('–ü—Ä–µ–¥–º–µ—Ç—ã —Å –≥—Ä—É–ø–ø–∞–º–∏:', subjectsWithGroups);
        
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–≤—è–∑–∏
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —Ç–∞–±–ª–∏—Ü—ã...');
        const tables = await database.query(`
            SELECT name FROM sqlite_master WHERE type='table' AND name LIKE '%group%' OR name LIKE '%subject%'
        `);
        console.log('–¢–∞–±–ª–∏—Ü—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≥—Ä—É–ø–ø–∞–º–∏ –∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏:', tables);
    }
}

checkSubjectsStructure();