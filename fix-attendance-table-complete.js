// fix-attendance-table-complete.js
const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, 'gradebook.db');
const db = new sqlite3.Database(dbPath);

console.log('üîÑ –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã attendance...');

// –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
const createTempTable = `
CREATE TABLE IF NOT EXISTS attendance_temp (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    student_id INTEGER NOT NULL,
    subject_id INTEGER NOT NULL,
    teacher_id INTEGER NOT NULL,
    date DATE NOT NULL,
    status TEXT NOT NULL CHECK(status IN ('present', 'absent', 'late', 'excused')),
    notes TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES students(id),
    FOREIGN KEY (subject_id) REFERENCES subjects(id),
    FOREIGN KEY (teacher_id) REFERENCES teachers(id)
);
`;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
function normalizeStatus(status) {
    const statusMap = {
        'present': 'present',
        'absent': 'absent', 
        'late': 'late',
        'excused': 'excused',
        '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª': 'present',
        '–û—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª': 'absent',
        '–û–ø–æ–∑–¥–∞–ª': 'late',
        '–£–≤–∞–∂–∏—Ç–µ–ª—å–Ω–∞—è': 'excused'
    };
    return statusMap[status] || 'absent'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'absent' –¥–ª—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
}

// –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã
db.all("SELECT * FROM attendance", (err, oldRecords) => {
    if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', err);
        db.close();
        return;
    }
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${oldRecords.length}`);
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    db.run(createTempTable, (err) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã:', err);
            db.close();
            return;
        }
        console.log('‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞');
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –æ–¥–Ω–æ–π —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π —Å—Ç–∞—Ç—É—Å–æ–≤
        let insertedCount = 0;
        let errorCount = 0;
        
        oldRecords.forEach(record => {
            const normalizedStatus = normalizeStatus(record.status);
            
            const insertSql = `
                INSERT INTO attendance_temp (id, student_id, subject_id, teacher_id, date, status, notes, created_at)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
            `;
            
            db.run(insertSql, [
                record.id,
                record.student_id,
                record.subject_id,
                1, // teacher_id –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                record.date,
                normalizedStatus,
                record.notes,
                record.created_at
            ], function(err) {
                if (err) {
                    console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –∑–∞–ø–∏—Å–∏ ${record.id}:`, err);
                    errorCount++;
                } else {
                    insertedCount++;
                }
                
                // –ö–æ–≥–¥–∞ –≤—Å–µ –∑–∞–ø–∏—Å–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
                if (insertedCount + errorCount === oldRecords.length) {
                    console.log(`‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${insertedCount}, –æ—à–∏–±–æ–∫: ${errorCount}`);
                    
                    // –ó–∞–≤–µ—Ä—à–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
                    db.run("DROP TABLE IF EXISTS attendance_old", (err) => {
                        if (err) {
                            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è backup —Ç–∞–±–ª–∏—Ü—ã:', err);
                        }
                        
                        db.run("ALTER TABLE attendance RENAME TO attendance_old", (err) => {
                            if (err) {
                                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã:', err);
                                db.close();
                                return;
                            }
                            
                            db.run("ALTER TABLE attendance_temp RENAME TO attendance", (err) => {
                                if (err) {
                                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã:', err);
                                } else {
                                    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ attendance —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
                                }
                                
                                db.close();
                                console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
                                console.log('üíæ –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ attendance_old');
                            });
                        });
                    });
                }
            });
        });
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü–µ
        if (oldRecords.length === 0) {
            db.run("DROP TABLE IF EXISTS attendance_old", (err) => {
                db.run("ALTER TABLE attendance RENAME TO attendance_old", (err) => {
                    db.run("ALTER TABLE attendance_temp RENAME TO attendance", (err) => {
                        if (err) {
                            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è:', err);
                        } else {
                            console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ attendance —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
                        }
                        db.close();
                    });
                });
            });
        }
    });
});